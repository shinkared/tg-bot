from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from main import CallbackFactory


class Keyboard:
    @staticmethod
    def get(a, b):
        builder = InlineKeyboardBuilder()
        builder.button(
            text="üëà", callback_data=CallbackFactory(action="film_1", value=a, value2=b)
        )
        builder.button(
            text="üëâ", callback_data=CallbackFactory(action="film_2", value=a, value2=b)
        )
        builder.button(
            text="–ü–æ—Å—Ç–µ—Ä –≤ HD", callback_data=CallbackFactory(action="q", value=a)
        )
        builder.button(
            text="–ü–æ—Å—Ç–µ—Ä –≤ HD", callback_data=CallbackFactory(action="q", value=b)
        )
        builder.button(
            text="–ù–µ —Å–º–æ—Ç—Ä–µ–ª(a)", callback_data=CallbackFactory(action="nw_1", value=a, value2=b)
        )
        builder.button(
            text="–ù–µ —Å–º–æ—Ç—Ä–µ–ª(a)", callback_data=CallbackFactory(action="nw_2", value=a, value2=b)
        )
        builder.button(
            text="–ù–µ —Å–º–æ—Ç—Ä–µ–ª(a) –æ–±–∞", callback_data=CallbackFactory(action="nw_3", value=a, value2=b)
        )
        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def new(a, b):
        builder = InlineKeyboardBuilder()
        builder.button(
            text="–ü–æ—Å—Ç–µ—Ä –≤ HD", callback_data=CallbackFactory(action="q", value=a)
        )
        builder.button(
            text="–ü–æ—Å—Ç–µ—Ä –≤ HD", callback_data=CallbackFactory(action="q", value=b)
        )
        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def settings():
        builder = InlineKeyboardBuilder()
        builder.button(
            text="–ì–æ–¥ –Ω–∞—á–∞–ª–∞", callback_data=CallbackFactory(action="set_1")
        )
        builder.button(
            text="–ì–æ–¥ –∫–æ–Ω—Ü–∞", callback_data=CallbackFactory(action="set_2")
        )
        builder.button(
            text="–°–æ–∫—Ä–∞—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data=CallbackFactory(action="n_1")
        )
        builder.button(
            text="–£–≤–µ–ª–∏—á–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data=CallbackFactory(action="n_2")
        )
        builder.adjust(2)
        return builder.as_markup()

    @staticmethod
    def search(films):
        builder = InlineKeyboardBuilder()
        k = 1
        for i in films:
            builder.button(
                text=f"{k}", callback_data=CallbackFactory(action="search", value=i)
            )
            k += 1
        builder.adjust(k - 1)
        return builder.as_markup()

    @staticmethod
    def cancel():
        builder = InlineKeyboardBuilder()
        builder.button(
            text="–û—Ç–º–µ–Ω–∞‚ùå", callback_data=CallbackFactory(action="cancel")
        )
        return builder.as_markup()

    @staticmethod
    def reply():
        builder = ReplyKeyboardBuilder()
        builder.button(text="–ú–æ–π —Ç–æ–ø üéñÔ∏è")
        builder.button(text="–ü–æ–º–æ—â—å üí¨")
        builder.button(text="–ü–æ–∏—Å–∫ üîé")
        builder.button(text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è")
        builder.button(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚è©Ô∏è")
        builder.adjust(3)
        return builder.as_markup(resize_keyboard=True)
